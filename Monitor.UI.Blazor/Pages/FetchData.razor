@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Databases</PageTitle>

<h1>Databases</h1>

<p>Databases currently being monitored</p>

@if (databases == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Host</th>
                <th>Instance</th>
                <th>Database</th>
                <th>Users</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var database in databases)
            {
                <tr>
                    <td>@database.Host</td>
                    <td>@database.Instance</td>
                    <td>@database.Database</td>
                    <td>@database.Users.Count</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<DatabaseState>? databases;

    protected override async Task OnInitializedAsync()
    {
        databases = await Http.GetFromJsonAsync<List<DatabaseState>>("api/monitor");
    }

    private class DatabaseState {
        public string Host { get; set; }
        public string Instance { get; set; }
        public string Database { get; set; }

        public List<string> Users { get; set; }
    }
}
